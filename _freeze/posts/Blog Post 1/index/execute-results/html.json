{
  "hash": "b75da3e4d959f96c23e9cff3eba19622",
  "result": {
    "markdown": "---\ntitle: \"Blog Post 1\"\nauthor: \"Jeffrey Merselis\"\ndate: \"2024-2-9\"\ntoc: true\n---\n\n\n# Introduction\n\nThe datasets I will be looking at contain data on groundhogs day groundhogs and their predictions of whether winter will come or not. In the predictions df there is 1400+ entries of id (groundhog id), year, shadow (T or F), and details. Details is any extra writen info that could add context to the sighting of the shadow. The groudhogs df has 75 entries with the groundhogs ids, information on the groundhogs, and information on the city/region where the groundhog is \"from\". I'll be making some plots to look compare the groundhogs and their predictions. This data is from the January 30th enrty of the tidy-tuesday github page. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load('2024-01-30')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 2: `predictions.csv`\n\tDownloading file 2 of 2: `groundhogs.csv`\n```\n:::\n\n```{.r .cell-code}\ngroundhogs <- tuesdata$groundhogs\npredictions <- tuesdata$predictions\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngroundhogs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 75 × 17\n      id slug     shortname name  city  region country latitude longitude source\n   <dbl> <chr>    <chr>     <chr> <chr> <chr>  <chr>      <dbl>     <dbl> <chr> \n 1     1 punxsut… Phil      Punx… Punx… Penns… USA         40.9     -79.0 \"http…\n 2     2 octorar… Orphie    Octo… Quar… Penns… USA         39.8     -76.1 \"http…\n 3     3 wiarton… Willie    Wiar… Wiar… Ontar… Canada      44.7     -81.1 \"http…\n 4     4 jimmy-t… Jimmy     Jimm… Sun … Wisco… USA         43.2     -89.2 \"http…\n 5     5 concord… Charlie   Conc… Athe… West … USA         37.4     -81.0 \"http…\n 6     6 buckeye… Chuck     Buck… Mari… Ohio   USA         40.6     -83.1 \"http…\n 7     7 general… Beau      Gene… Jack… Georg… USA         33.2     -83.9 \"http…\n 8     8 french-… Freddie   Fren… Upsh… West … USA         38.9     -80.3 \"http…\n 9     9 gertie-… Gertie    Gert… Hann… Illin… USA         40.7     -89.7 \"http…\n10    10 dunkirk… Dave      Dunk… Dunk… New Y… USA         42.5     -79.4 \"http…\n# ℹ 65 more rows\n# ℹ 7 more variables: current_prediction <chr>, is_groundhog <lgl>, type <chr>,\n#   active <lgl>, description <chr>, image <chr>, predictions_count <dbl>\n```\n:::\n\n```{.r .cell-code}\npredictions\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,462 × 4\n      id  year shadow details                                                   \n   <dbl> <dbl> <lgl>  <chr>                                                     \n 1     1  1886 NA     Groundhog Day first recognized in Punxsutawney by Weather…\n 2     1  1887 TRUE   First Official trek to Gobbler’s Knob. Saw Shadow.        \n 3     1  1888 TRUE   Saw Shadow.                                               \n 4     1  1889 NA     No Record.                                                \n 5     1  1890 FALSE  No Shadow.                                                \n 6     1  1891 NA     No Record.                                                \n 7     1  1892 NA     No Record.                                                \n 8     1  1893 NA     No Record.                                                \n 9     1  1894 NA     No Record.                                                \n10     1  1895 NA     No Record.                                                \n# ℹ 1,452 more rows\n```\n:::\n:::\n\n\n# Primary Visualizations\n\n## Groundhogs per Region\n\n\n::: {.cell}\n\n```{.r .cell-code}\nper_region_df <- groundhogs|>\n  group_by(region)|>\n  summarise(n_hogs = n()) |>\n  arrange(desc(n_hogs)) |>\n  mutate(region = fct_reorder(region, n_hogs))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = per_region_df, aes(x = region, y = n_hogs)) +\n  geom_segment(aes(xend = region, yend = 0)) +\n  geom_point() + \n  theme_minimal() +\n  coord_flip() +\n  labs(title = \"Number of Groundhogs per Region\",\n       x = \"Region\",\n       y = \"Number of Groundhogs\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nA graph of how many groundhogs each region has. Each entry in groundhogs is a unique groundhog, so this counts the number of times each region is entered. The Pennsylvania region has the most ground hogs by almost double the second most.  \n\n## Different Groundhogs\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntype_plot <- groundhogs |>\n  group_by(type) |>\n  summarize(count = n()) |>\n  mutate(type = if_else(count == 1, true = \"Other\", false = type)) |>\n  group_by(type) |>\n  summarize(count = sum(count)) |>\n  arrange(desc(count)) |>\n  mutate(type = fct_reorder(type, count))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npie(type_plot$count, labels = type_plot$type, main = \"Different Groundhogs\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nThis pie chart shows some of the other \"animals\" that have been used in place of real groundhogs, and how common the alternatives are. \n\n## Shadows Seen vs. Not Seen\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredictions_noNA_df <- predictions |>\n  filter(!is.na(shadow))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = predictions_noNA_df, aes(x = shadow)) +\n  geom_bar() +\n  geom_text(stat = \"count\", aes(label = after_stat(count)), vjust = -0.5) + # AI*\n  labs(title = \"Total Shadows Seen (True) vs. Not Seen (False)\",\n       x = \"\",\n       y = \"Count\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nThis is a simple plot tallying the number of times a groundhog saw it's shadow, vs time a groundhog didn't see it's shadow. \n\n* Into chatGPT: \"In this plot put the number of each bar on the bar: (My code for the plot minus the geom_text line)\"\n\n## Proportion of Shadows Seen vs. Not Seen\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshadow_prop <- predictions_noNA_df |>\n  group_by(year, shadow) |>\n  summarise(n_predictions = n()) |>\n  filter(n_predictions > 1) |>\n  ungroup() |>\n  arrange(desc(year)) |>\n  pivot_wider(names_from = shadow, values_from = n_predictions) \n\nshadow_prop[is.na(shadow_prop)] <- 0 # AI*\n\nshadow_prop <- shadow_prop |>\n  mutate(n = `FALSE` + `TRUE`) |>\n  filter(n >= 10) |>\n  mutate(samp_prop = `TRUE` / n,\n         se = sqrt(samp_prop * (1 - samp_prop) / n),\n         lb = samp_prop - se,\n         ub = samp_prop + se)\n```\n:::\n\n\n* Into chatGPT: \"Give code in r to re-write an NA input to 0.\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = shadow_prop, aes(x = year, y = samp_prop)) +\n  geom_errorbar(aes(ymin = lb, ymax = ub)) +\n  geom_point() +\n  labs(title = \"Proportion of Shadows Seen vs. Not Seen\",\n       subtitle = \"(For years with over 10 observations by groundhogs)\",\n       x = \"Year\",\n       y = \"Proportion\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nThis plot shows the proportion of seen vs not seen shadows for years where 10 or more groundhogs observed their shadow. It seems that the groundhogs have started to disagree more in recent years but the standard deviation is getting smaller, this is probably because more groundhogs observe in recent years then early in the 90s and 2000s. \n\n# Conclusion and Wrap-Up\n\nI know the pie chart is the weakest plot. I would have liked to 1) add the count into each slice, and 2) listed all the \"Other\" groundhogs, but the easiest way to make a pie chart I found was the pie() function, but I never figured out how to add text onto each slice. I also wish there had been data on if the groundhogs had been right or wrong but it wasn't provided. \n\n# Connection to Class Ideas\n\nThe final plot is the same as the tattoo example we did in class and I'm a big fan of the error_bar() plots. I hope that I will use it in future blog posts too. I think that my graphs are good at portraying data in a simple and understandable way, and I have learned more about when is the best time to use different plots to convey different ideas. ",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}